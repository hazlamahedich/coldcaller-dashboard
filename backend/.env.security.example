# Security Configuration Template
# Copy to .env and update with your secure values

# ==============================================================================
# JWT & Authentication Security
# ==============================================================================

# JWT Secret Keys (CHANGE THESE IN PRODUCTION!)
JWT_SECRET=your-super-secure-jwt-secret-minimum-32-characters-long
JWT_REFRESH_SECRET=your-refresh-secret-different-from-jwt-secret-32-chars
JWT_EXPIRES_IN=24h

# Password Hashing
BCRYPT_ROUNDS=12

# ==============================================================================
# Encryption Keys
# ==============================================================================

# Master Encryption Key (minimum 32 characters)
ENCRYPTION_KEY=your-master-encryption-key-32-characters-minimum

# HMAC Secrets
AUDIT_SECRET=your-audit-log-hmac-secret-32-characters-minimum

# ==============================================================================
# Database Security
# ==============================================================================

# Production Database (PostgreSQL)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=coldcaller_prod
DB_USER=coldcaller_user
DB_PASSWORD=secure-database-password-change-me
DB_SSL=true

# Connection Pool Settings
DB_POOL_MIN=5
DB_POOL_MAX=20

# ==============================================================================
# API Keys & External Service Credentials
# ==============================================================================

# GitHub Token (for vulnerability scanning)
GITHUB_TOKEN=your-github-token-for-security-advisories

# CRM Integration Credentials (encrypted in storage)
SALESFORCE_CLIENT_ID=your-salesforce-client-id
SALESFORCE_CLIENT_SECRET=your-salesforce-client-secret
SALESFORCE_USERNAME=your-salesforce-username
SALESFORCE_PASSWORD=your-salesforce-password
SALESFORCE_SECURITY_TOKEN=your-salesforce-security-token
SALESFORCE_BASE_URL=https://login.salesforce.com

HUBSPOT_API_KEY=your-hubspot-api-key
HUBSPOT_ACCESS_TOKEN=your-hubspot-access-token

PIPEDRIVE_BASE_URL=https://api.pipedrive.com
PIPEDRIVE_API_TOKEN=your-pipedrive-api-token

ZOHO_CLIENT_ID=your-zoho-client-id
ZOHO_CLIENT_SECRET=your-zoho-client-secret
ZOHO_REFRESH_TOKEN=your-zoho-refresh-token

# Default CRM Provider
DEFAULT_CRM_PROVIDER=hubspot

# ==============================================================================
# Security Configuration
# ==============================================================================

# Environment
NODE_ENV=production

# CORS Configuration
FRONTEND_URL=https://your-frontend-domain.com

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=500
AUTH_RATE_LIMIT_MAX=5

# File Upload Security
MAX_FILE_SIZE=52428800
UPLOAD_DIR=./uploads
ALLOWED_FILE_TYPES=audio/mpeg,audio/wav,audio/ogg,application/pdf

# ==============================================================================
# Audit Logging
# ==============================================================================

# Audit Log Configuration
AUDIT_LOG_DIR=./logs/audit
LOG_RETENTION_DAYS=90
LOG_MAX_SIZE=10485760

# ==============================================================================
# Monitoring & Alerting
# ==============================================================================

# External Logging Service
EXTERNAL_LOG_SERVICE_URL=https://your-logging-service.com
EXTERNAL_LOG_API_KEY=your-logging-service-api-key

# Alert Configuration
ALERT_EMAIL=security@yourcompany.com
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# ==============================================================================
# SSL/TLS Configuration
# ==============================================================================

# HTTPS Settings
HTTPS_ENABLED=true
SSL_CERT_PATH=./certs/server.crt
SSL_KEY_PATH=./certs/server.key

# TLS Version
TLS_MIN_VERSION=1.2
TLS_CIPHER_SUITE=HIGH:!aNULL:!MD5

# ==============================================================================
# Container & Deployment Security
# ==============================================================================

# Container Registry
CONTAINER_REGISTRY=your-registry.com/coldcaller

# Docker Security Scanning
DOCKER_SCAN_ENABLED=true

# ==============================================================================
# Compliance & Privacy
# ==============================================================================

# GDPR Configuration
GDPR_ENABLED=true
DATA_RETENTION_DAYS=365
PRIVACY_POLICY_VERSION=1.0

# Geographic Data Processing
DATA_PROCESSING_REGION=EU
CROSS_BORDER_TRANSFER_CONSENT=required

# ==============================================================================
# Backup & Recovery
# ==============================================================================

# Backup Encryption
BACKUP_ENCRYPTION_KEY=your-backup-encryption-key-32-chars-minimum
BACKUP_RETENTION_DAYS=30

# Recovery Settings
RECOVERY_CONTACT=admin@yourcompany.com
DISASTER_RECOVERY_PLAN_URL=https://docs.yourcompany.com/dr-plan

# ==============================================================================
# Development & Testing (DO NOT USE IN PRODUCTION)
# ==============================================================================

# Development overrides (only when NODE_ENV=development)
DEV_SKIP_AUTH=false
DEV_MOCK_EXTERNAL_APIS=false
DEV_ENABLE_CORS_ALL=false

# Testing
TEST_DATABASE_URL=sqlite::memory:
TEST_JWT_SECRET=test-secret-do-not-use-in-production

# ==============================================================================
# Security Notes
# ==============================================================================

# 1. Change ALL default values before deploying to production
# 2. Use environment-specific configuration management (HashiCorp Vault, AWS Secrets Manager, etc.)
# 3. Rotate secrets regularly (monthly for high-security environments)
# 4. Monitor for unauthorized access to environment variables
# 5. Use different secrets for each environment (dev, staging, prod)
# 6. Consider using sealed secrets for Kubernetes deployments
# 7. Audit access to environment configuration files
# 8. Use strong, unique passwords for each service
# 9. Enable 2FA/MFA wherever possible
# 10. Regularly review and update security configurations